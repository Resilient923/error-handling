{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"https://mock.codes\";\nexport const getApi1 = async () => {\n  return await axios.get(`${baseUrl}/400`);\n};\nexport const getApi2 = async () => {\n  /**\n   *\n   */\n  console.log(\"getApi2 called\");\n  const resp = await axios.get(`${baseUrl}/400`);\n\n  if (resp.status !== 200) {\n    console.log(`getApi2 status error : ${resp.status}`);\n    throw new Error();\n  }\n\n  return resp.data;\n};","map":{"version":3,"names":["axios","baseUrl","getApi1","get","getApi2","console","log","resp","status","Error","data"],"sources":["/Users/steadyshin/Documents/GitHub/axios-test/axios-test/src/api.ts"],"sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"https://mock.codes\";\n\nexport const getApi1 = async () => {\n  return await axios.get(`${baseUrl}/400`);\n};\n\nexport const getApi2 = async () => {\n  /**\n   *\n   */\n  console.log(\"getApi2 called\");\n  const resp = await axios.get(`${baseUrl}/400`);\n  if (resp.status !== 200) {\n    console.log(`getApi2 status error : ${resp.status}`);\n    throw new Error();\n  }\n  return resp.data;\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,oBAAhB;AAEA,OAAO,MAAMC,OAAO,GAAG,YAAY;EACjC,OAAO,MAAMF,KAAK,CAACG,GAAN,CAAW,GAAEF,OAAQ,MAArB,CAAb;AACD,CAFM;AAIP,OAAO,MAAMG,OAAO,GAAG,YAAY;EACjC;AACF;AACA;EACEC,OAAO,CAACC,GAAR,CAAY,gBAAZ;EACA,MAAMC,IAAI,GAAG,MAAMP,KAAK,CAACG,GAAN,CAAW,GAAEF,OAAQ,MAArB,CAAnB;;EACA,IAAIM,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;IACvBH,OAAO,CAACC,GAAR,CAAa,0BAAyBC,IAAI,CAACC,MAAO,EAAlD;IACA,MAAM,IAAIC,KAAJ,EAAN;EACD;;EACD,OAAOF,IAAI,CAACG,IAAZ;AACD,CAXM"},"metadata":{},"sourceType":"module"}